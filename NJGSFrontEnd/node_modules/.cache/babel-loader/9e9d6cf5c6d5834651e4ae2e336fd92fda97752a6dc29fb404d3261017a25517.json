{"ast":null,"code":"var _jsxFileName = \"/Users/ryrytolt/Desktop/309/NJGS/NJGSFrontEnd/src/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = \"http://localhost:8000\"; // todo: put in .env\n\nfunction LoginForm(props) {\n  _s();\n  const [user, setUser] = useState({\n    username: \"\",\n    pwd: \"\"\n  });\n  const navigate = useNavigate();\n  const [message, setMsg] = useState(\"\");\n  function submitForm(e) {\n    e.preventDefault(); // Prevent page from reloading\n    makeLoginCall(user).then(response => {\n      if (response && response.status === 200) {\n        const token = response.data;\n        setUser({\n          username: \"\",\n          pwd: \"\"\n        });\n        setMsg(\"\");\n        props.setToken(token);\n        navigate(\"/users-table\");\n      } else {\n        setMsg(\"Invalid login credentials!\");\n      }\n    });\n  }\n  async function makeLoginCall(user) {\n    try {\n      const response = await axios.post(`${BACKEND_URL}/login`, user);\n      return response;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      id: \"username\",\n      value: user.username,\n      onChange: event => setUser({\n        ...user,\n        username: event.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"job\",\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"pwd\",\n      id: \"pwd\",\n      value: user.pwd,\n      onChange: event => setUser({\n        ...user,\n        pwd: event.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Submit\",\n      onClick: submitForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      children: [\" \", message, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"iPPD/osRm+0VTcy6G7YDqOb3+IQ=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","BACKEND_URL","LoginForm","props","_s","user","setUser","username","pwd","navigate","message","setMsg","submitForm","e","preventDefault","makeLoginCall","then","response","status","token","data","setToken","post","error","console","log","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","name","id","value","onChange","event","target","onClick","_c","$RefreshReg$"],"sources":["/Users/ryrytolt/Desktop/309/NJGS/NJGSFrontEnd/src/LoginForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nconst BACKEND_URL = \"http://localhost:8000\"; // todo: put in .env\n\nfunction LoginForm(props) {\n  const [user, setUser] = useState({\n    username: \"\",\n    pwd: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  const [message, setMsg] = useState(\"\");\n\n  function submitForm(e) {\n    e.preventDefault(); // Prevent page from reloading\n    makeLoginCall(user).then((response) => {\n      if (response && response.status === 200) {\n        const token = response.data;\n        setUser({ username: \"\", pwd: \"\" });\n        setMsg(\"\");\n        props.setToken(token);\n        navigate(\"/users-table\");\n      } else {\n        setMsg(\"Invalid login credentials!\");\n      }\n    });\n  }\n\n  async function makeLoginCall(user) {\n    try {\n      const response = await axios.post(`${BACKEND_URL}/login`, user);\n      return response;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  return (\n    <form>\n      <label htmlFor=\"name\">Username</label>\n      <input\n        type=\"text\"\n        name=\"username\"\n        id=\"username\"\n        value={user.username}\n        onChange={(event) => setUser({ ...user, username: event.target.value })}\n      />\n      <label htmlFor=\"job\">Password</label>\n      <input\n        type=\"password\"\n        name=\"pwd\"\n        id=\"pwd\"\n        value={user.pwd}\n        onChange={(event) => setUser({ ...user, pwd: event.target.value })}\n      />\n      <input type=\"button\" value=\"Submit\" onClick={submitForm} />\n      <i> {message} </i>\n    </form>\n  );\n}\n\nexport default LoginForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}